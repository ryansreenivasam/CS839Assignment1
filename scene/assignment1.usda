#usda 1.0
(
    endTimeCode = 20
    startTimeCode = 0
)

def Mesh "TriangulatedSurface0"
{
    float3[] extent = [(0, 0, 0), (1.625, 2.25, 3.5)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 1, 3, 2, 4, 6, 7, 4, 7, 5, 0, 4, 5, 0, 5, 1, 2, 6, 3, 3, 6, 7, 1, 7, 3, 1, 5, 7, 0, 2, 4, 2, 6, 4]
    point3f[] points.timeSamples = {
        0: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)],
        1: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.03125, 0.0625, 0.125), (1.03125, 0.0625, 1.125), (1.03125, 1.0625, 0.125), (1.03125, 1.0625, 1.125)],
        2: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.0625, 0.125, 0.25), (1.0625, 0.125, 1.25), (1.0625, 1.125, 0.25), (1.0625, 1.125, 1.25)],
        3: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.09375, 0.1875, 0.375), (1.09375, 0.1875, 1.375), (1.09375, 1.1875, 0.375), (1.09375, 1.1875, 1.375)],
        4: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.125, 0.25, 0.5), (1.125, 0.25, 1.5), (1.125, 1.25, 0.5), (1.125, 1.25, 1.5)],
        5: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.15625, 0.3125, 0.625), (1.15625, 0.3125, 1.625), (1.15625, 1.3125, 0.625), (1.15625, 1.3125, 1.625)],
        6: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.1875, 0.375, 0.75), (1.1875, 0.375, 1.75), (1.1875, 1.375, 0.75), (1.1875, 1.375, 1.75)],
        7: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.21875, 0.4375, 0.875), (1.21875, 0.4375, 1.875), (1.21875, 1.4375, 0.875), (1.21875, 1.4375, 1.875)],
        8: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.25, 0.5, 1), (1.25, 0.5, 2), (1.25, 1.5, 1), (1.25, 1.5, 2)],
        9: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.28125, 0.5625, 1.125), (1.28125, 0.5625, 2.125), (1.28125, 1.5625, 1.125), (1.28125, 1.5625, 2.125)],
        10: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.3125, 0.625, 1.25), (1.3125, 0.625, 2.25), (1.3125, 1.625, 1.25), (1.3125, 1.625, 2.25)],
        11: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.34375, 0.6875, 1.375), (1.34375, 0.6875, 2.375), (1.34375, 1.6875, 1.375), (1.34375, 1.6875, 2.375)],
        12: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.375, 0.75, 1.5), (1.375, 0.75, 2.5), (1.375, 1.75, 1.5), (1.375, 1.75, 2.5)],
        13: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.40625, 0.8125, 1.625), (1.40625, 0.8125, 2.625), (1.40625, 1.8125, 1.625), (1.40625, 1.8125, 2.625)],
        14: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.4375, 0.875, 1.75), (1.4375, 0.875, 2.75), (1.4375, 1.875, 1.75), (1.4375, 1.875, 2.75)],
        15: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.46875, 0.9375, 1.875), (1.46875, 0.9375, 2.875), (1.46875, 1.9375, 1.875), (1.46875, 1.9375, 2.875)],
        16: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.5, 1, 2), (1.5, 1, 3), (1.5, 2, 2), (1.5, 2, 3)],
        17: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.53125, 1.0625, 2.125), (1.53125, 1.0625, 3.125), (1.53125, 2.0625, 2.125), (1.53125, 2.0625, 3.125)],
        18: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.5625, 1.125, 2.25), (1.5625, 1.125, 3.25), (1.5625, 2.125, 2.25), (1.5625, 2.125, 3.25)],
        19: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.59375, 1.1875, 2.375), (1.59375, 1.1875, 3.375), (1.59375, 2.1875, 2.375), (1.59375, 2.1875, 3.375)],
        20: [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1.625, 1.25, 2.5), (1.625, 1.25, 3.5), (1.625, 2.25, 2.5), (1.625, 2.25, 3.5)],
    }
}

